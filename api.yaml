---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Intercorp API"
host: "api.vimero4j.com"
schemes:
  - "https"
  - "http"
paths:
  /v1/customer-management/customers:
    post:
      tags:
        - customers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "data"
          required: true
          schema:
            $ref: "#/definitions/CustomerData"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
          headers:
            X-Requested-With:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        422:
          description: "422 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
      x-amazon-apigateway-integration:
        uri: "http://${stageVariables.url}/v1/customer-management/customers"
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST,GET,PUT,PATCH,OPTIONS'"
              method.response.header.X-Requested-With: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          400:
            statusCode: "400"
          422:
            statusCode: "422"
          401:
            statusCode: "401"
          500:
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
    get:
      tags:
        - customers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CustomerList"
          headers:
            X-Requested-With:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        422:
          description: "422 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
      x-amazon-apigateway-integration:
        uri: "http://${stageVariables.url}/v1/customer-management/customers"
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST,GET,PUT,PATCH,OPTIONS'"
              method.response.header.X-Requested-With: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          400:
            statusCode: "400"
          422:
            statusCode: "422"
          401:
            statusCode: "401"
          500:
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
  /v1/customer-management/customers/kpi:
    get:
      tags:
        - customers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AgeKPIResource"
          headers:
            X-Requested-With:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        422:
          description: "422 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        401:
          description: "401 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ResponseStatus"
      x-amazon-apigateway-integration:
        uri: "http://${stageVariables.url}/v1/customer-management/customers/kpi"
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST,GET,PUT,PATCH,OPTIONS'"
              method.response.header.X-Requested-With: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          400:
            statusCode: "400"
          422:
            statusCode: "422"
          401:
            statusCode: "401"
          500:
            statusCode: "500"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"

definitions:
  ResponseStatus:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The HTTP code"
      message:
        type: "string"
        description: "A description message"
  CustomerData:
    type: "object"
    properties:
      firstName:
        type: "string"
        description: "First Name"
      lastName:
        type: "string"
        description: "Last Name"
      dateBirthday:
        type: "string"
        description: "Date of Birthday"
      age:
        type: "number"
        format: "int32"
        description: "Age"
  CustomerResource:
    type: "object"
    properties:
      firstName:
        type: "string"
        description: "First Name"
      lastName:
        type: "string"
        description: "Last Name"
      dateBirthday:
        type: "string"
        description: "Date of Birthday"
      age:
        type: "number"
        format: "int32"
        description: "Age"
      dateDeath:
        type: "string"
        description: "Date of Death"
  CustomerList:
    type: "object"
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CustomerResource'
  AgeKPIResource:
    type: "object"
    properties:
      average:
        type: "number"
        format: "double"
        description: "Average"
      standard:
        type: "number"
        format: "double"
        description: "Standard"